def bfs(graph, startNode):
    nodeColor = {}
    nodeDistance = {}
    nodePred = {}

    # visitedNodes = []

    # All'inizio tutti i nodi sono white, distanza 0 e nessun predecessore

    # Inserimento primo vertice
    vertQueue = Queue()
    vertQueue.enqueue(startNode)

    while vertQueue.size() > 0:
        currentVert = vertQueue.dequeue()
        if currentVert not in nodeDistance:
            nodeDistance[currentVert] = 0
        neighbors = list(graph.neighbors(currentVert))
        # neighbors = graph.neighbors(startNode)
        # visitedNodes.append(currentVert)

        for nbr in neighbors:
            if nbr not in nodeColor:
                nodeColor[nbr] = 'g'  # Colore grigio
                nodeDistance[nbr] = nodeDistance[currentVert] + 1
                nodePred[nbr] = currentVert
                vertQueue.enqueue(nbr)
        nodeColor[currentVert] = 'b'  # Colore nero

    # print("Dizionario distanze: ", nodeDistance)
    return nodeDistance